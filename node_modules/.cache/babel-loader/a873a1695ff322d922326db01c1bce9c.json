{"ast":null,"code":"import _objectSpread from \"/Users/blakeneely/Desktop/basic-kanban/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/blakeneely/Desktop/basic-kanban/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blakeneely/Desktop/basic-kanban/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport uuid from 'uuid/v4';\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task'\n}, {\n  id: uuid(),\n  content: 'Second task'\n}];\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: 'Todo',\n    items: itemsFromBackend\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const source = result.source,\n        destination = result.destination;\n  const column = columns[source.droppableId];\n  const copiedItems = [...column.items];\n\n  const _copiedItems$splice = copiedItems.splice(source.index, 1),\n        _copiedItems$splice2 = _slicedToArray(_copiedItems$splice, 1),\n        removed = _copiedItems$splice2[0];\n\n  copiedItems.splice(destination.index, 0, removed);\n};\n\nfunction App() {\n  const _useState = useState(columnsFromBackend),\n        _useState2 = _slicedToArray(_useState, 2),\n        columns = _useState2[0],\n        setColumns = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(DragDropContext, {\n    onDragEnd: result => console.log(result),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, Object.entries(columns).map(([id, column]) => {\n    return React.createElement(Droppable, {\n      droppableId: id,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, (provided, snapshot) => {\n      return React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n          padding: 4,\n          width: 250,\n          minHeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), column.items.map((item, index) => {\n        return React.createElement(Draggable, {\n          key: item.id,\n          draggableId: item.id,\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, (provided, snapshot) => {\n          return React.createElement(\"div\", Object.assign({\n            ref: provided.innerRef\n          }, provided.draggableProps, provided.dragHandleProps, {\n            style: _objectSpread({\n              userSelect: 'none',\n              padding: 16,\n              margin: '0 0 8px 0',\n              minHeight: '50px',\n              backgroundColor: snapshot.isDragging ? '#263B4A' : '#456C86',\n              color: 'white'\n            }, provided.draggableProps.style),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }), item.content);\n        });\n      }), provided.placeholder);\n    });\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/blakeneely/Desktop/basic-kanban/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","uuid","itemsFromBackend","id","content","columnsFromBackend","name","items","onDragEnd","result","columns","setColumns","destination","source","column","droppableId","copiedItems","splice","index","removed","App","console","log","Object","entries","map","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableProps","dragHandleProps","userSelect","margin","backgroundColor","isDragging","color","style","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; \nimport uuid from 'uuid/v4';\n\nconst itemsFromBackend = [\n  { id: uuid(), content: 'First task' },\n  { id: uuid(), content: 'Second task' }\n]\n\nconst columnsFromBackend = \n{\n  [uuid()]: {\n    name: 'Todo',\n    items: itemsFromBackend\n  }\n}\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if(!result.destination) return;\n  const { source, destination } = result;\n  const column = columns[source.droppableId];\n  const copiedItems = [...column.items];\n  const [removed] = copiedItems.splice(source.index, 1);\n  copiedItems.splice(destination.index, 0, removed)\n};\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackend);\n  return (\n    <div className='main'> \n      <DragDropContext onDragEnd={result => console.log(result)}>\n        {Object.entries(columns).map(([id, column]) => {\n          return (\n            <Droppable droppableId={id} key={id}>\n              {(provided, snapshot) => {\n                return (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: 500\n                    }}\n                  >\n                    {column.items.map((item, index) => {\n                      return (\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                          {(provided, snapshot) => {\n                            return (\n                              <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={{\n                                userSelect: 'none',\n                                padding: 16,\n                                margin: '0 0 8px 0',\n                                minHeight: '50px',\n                                backgroundColor: snapshot.isDragging ? '#263B4A' : '#456C86',\n                                color: 'white',\n                                ...provided.draggableProps.style\n                              }}\n                              >\n                                {item.content}\n                              </div>\n                            )\n                          }}\n                        </Draggable>\n                      )\n                    })}\n                    {provided.placeholder}\n                  </div>\n                )\n              }}\n            </Droppable>\n          )\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}