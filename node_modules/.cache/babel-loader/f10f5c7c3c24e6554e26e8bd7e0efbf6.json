{"ast":null,"code":"import _slicedToArray from \"/Users/blakeneely/Desktop/basic-kanban/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blakeneely/Desktop/basic-kanban/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport uuid from 'uuid/v4';\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task'\n}, {\n  id: uuid(),\n  content: 'Second task'\n}];\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: 'Todo',\n    items: itemsFromBackend\n  }\n};\n\nfunction App() {\n  const _useState = useState(columnsFromBackend),\n        _useState2 = _slicedToArray(_useState, 2),\n        columns = _useState2[0],\n        setColums = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(DragDropContext, {\n    onDropEnd: result => console.log(result),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, Object.entries(columns).map(([id, column]) => {\n    return React.createElement(Droppable, {\n      droppableId: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, (provided, snapshot) => {\n      return React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        style: {\n          background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n          padding: 4,\n          width: 250,\n          minHeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    });\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/blakeneely/Desktop/basic-kanban/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","uuid","itemsFromBackend","id","content","columnsFromBackend","name","items","App","columns","setColums","result","console","log","Object","entries","map","column","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,MAAMC,gBAAgB,GAAG,CACvB;AAAEC,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CADuB,EAEvB;AAAED,EAAAA,EAAE,EAAEF,IAAI,EAAV;AAAcG,EAAAA,OAAO,EAAE;AAAvB,CAFuB,CAAzB;AAKA,MAAMC,kBAAkB,GAAG;AACzB,GAACJ,IAAI,EAAL,GAAU;AACRK,IAAAA,IAAI,EAAE,MADE;AAERC,IAAAA,KAAK,EAAEL;AAFC;AADe,CAA3B;;AAOA,SAASM,GAAT,GAAe;AAAA,oBACgBX,QAAQ,CAACQ,kBAAD,CADxB;AAAA;AAAA,QACNI,OADM;AAAA,QACGC,SADH;;AAEb,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACC,OAAP,CAAeN,OAAf,EAAwBO,GAAxB,CAA4B,CAAC,CAACb,EAAD,EAAKc,MAAL,CAAD,KAAkB;AAC7C,WACE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAEd,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACe,QAAD,EAAWC,QAAX,KAAwB;AACvB,aACE,6CACMD,QAAQ,CAACE,cADf;AAEE,QAAA,GAAG,EAAEF,QAAQ,CAACG,QAFhB;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAEH,QAAQ,CAACI,cAAT,GAA0B,WAA1B,GAAwC,WAD/C;AAELC,UAAAA,OAAO,EAAE,CAFJ;AAGLC,UAAAA,KAAK,EAAE,GAHF;AAILC,UAAAA,SAAS,EAAE;AAJN,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAaD,KAfH,CADF;AAmBD,GApBA,CADH,CADF,CADF;AA2BD;;AAED,eAAelB,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; \nimport uuid from 'uuid/v4';\n\nconst itemsFromBackend = [\n  { id: uuid(), content: 'First task' },\n  { id: uuid(), content: 'Second task' }\n]\n\nconst columnsFromBackend = {\n  [uuid()]: {\n    name: 'Todo',\n    items: itemsFromBackend\n  }\n}\n\nfunction App() {\n  const [columns, setColums] = useState(columnsFromBackend);\n  return (\n    <div className='main'> \n      <DragDropContext onDropEnd={result => console.log(result)}>\n        {Object.entries(columns).map(([id, column]) => {\n          return (\n            <Droppable droppableId={id}>\n              {(provided, snapshot) => {\n                return (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: 500\n                    }}\n                  >\n                  </div>\n                )\n              }}\n            </Droppable>\n          )\n        })}\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}